<%_ include partials/header _%>
    <div class="content-container" style="padding-top: 2em;">
        <ul class="nav nav-pills">
            <li class="active"><a data-toggle="pill" href="#articles">ARTICLES</a></li>
            <li><a data-toggle="pill" href="#discography">DISCOGRAPHY</a></li>
            <li><a data-toggle="pill" href="#artists">ARTISTS</a></li>
            <li><a data-toggle="pill" href="#locations">LOCATIONS</a></li>
            <li><a data-toggle="pill" href="#mail">MAIL</a></li>
            <li><a data-toggle="pill" href="#edit-remove">EDIT / REMOVE</a></li>
        </ul>
        <div class="tab-content container">
            <div id="articles" class="tab-pane fade in active">
            <%_ include partials/admin/articles _%>
            </div>

            <div id="discography" class="tab-pane fade">
            <%_ include partials/admin/discography _%>
            </div>

            <div id="artists" class="tab-pane fade">
            <%_ include partials/admin/artists _%>
            </div>

            <div id="locations" class="tab-pane fade">
            <%_ include partials/admin/locations _%>
            </div>

            <div id="edit-remove" class="tab-pane fade">
            <%_ include partials/admin/edit-remove _%>
            </div>

            <div id="mail" class="tab-pane fade">
            <%_ include partials/admin/mail _%>
            </div>
        </div>
    </div>
    <script>
        var readDataURLs = function(files, cb) {
            $.each(files, function(i, file) {
                var reader = new FileReader();
                reader.onload = cb;
                reader.readAsDataURL(file)
            });
        };
        var showMessage = function(result, container, reload) {
            var $msg = $('<div class="msg" style><div class="text">'+ result.replace(/\n/g, "<br>") +'</div></div>');
            $msg.css("display", "none").appendTo(container).fadeIn().delay(2000).fadeOut(function(){
                $(this).remove();
                if (reload) location.reload();
            });
        };
        var invalidURLs = function(links) {
            links = typeof links == "string" ? [links] : links;
            return links.filter(function(link) {
                var url_format = /(youtu.?be\/|v\/|u\/\w\/|embed\/|watch\?v=|\&v=|\?v=)([^#\&\?]*).*|<iframe(.*?)<\/iframe>|^(data:)|^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+(.jpe?g|.png|.gif|.mp(3|4)|.mov|.m4a|.wav)$/gi;
                return !url_format.test(link);
            });
        }

        var headline_images = [];
        $("#headline_images, #headline_images_change").change(function() {
            var $form = $(this).closest("form");
            var files = this.files;
            var $thumb_choice = $form.find(".headline-image-thumb-choice");
            headline_images = [];
            $thumb_choice.find("input").off("change").end().empty().hide();
            if (files.length) {
                var $submitInput = $form.children("input:submit");
                var counter = 0;
                var label = "<label>CHOOSE ARTICLE THUMBNAIL</label>";
                $thumb_choice.show().append(label);
                readDataURLs(files, function(e) {
                    var url = e.target.result;
                    var edit = /_change|_edit/i.test($form.get(0).id);
                    var name = "headline_image_thumb" + (edit ? "_change" : "");
                    var $input = $("<input>").attr({ type: "radio", name, value: url, required: true });
                    var $img = $("<img>").attr({ src: url });
                    headline_images.push(url);
                    $thumb_choice.append($input.add($img));
                    counter += 1;
                    if (counter === files.length) $submitInput.attr("disabled", false);
                });
            }
        });

        var textbody_media = [];
        var spots = [];
        $("#textbody, #textbody_edit").change(function() {
            var textbody = this;
            var tbm_container = $(this).closest("form").find(".textbody_media");
            textbody_media = [];
            spots = textbody.value.split("\n").filter(function(x) { return x.trim().toLowerCase() === "x" });
            $(tbm_container).find("input").off("change");
            if ($(tbm_container).html()) $(tbm_container).empty();
            if (spots.length) {
                spots.forEach(function(spot, i) {
                    var $fileInput = $("<input>").attr({ type: "file"});
                    var $textInput = $("<input>").attr({ type: "text", required: true, placeholder: "...or enter image URL or embed code"});
                    var $set = $fileInput.add($textInput);
                    $(tbm_container).append($set);
                });

                $(tbm_container).find("input:text").change(function() {
                    var pos = $(tbm_container).find("input:text").index(this);
                    var length = $(tbm_container).find("input:text").length;
                    var $submitInput = $(this).closest("form").children("input:submit");
                    if (!this.value) {
                        textbody_media.splice(pos, 1);
                    } else if (textbody_media.length <= 1) {
                        if (pos == 0) {
                            textbody_media.unshift(this.value);
                        } else {
                            textbody_media.push(this.value);
                        }
                    } else if (pos == 0) {
                        textbody_media.shift();
                        textbody_media.unshift(this.value);
                    } else if (pos == length-1) {
                        textbody_media.pop();
                        textbody_media.push(this.value);
                    } else {
                        textbody_media.splice(pos, 1, this.value);
                    }
                    $submitInput.attr("disabled", false);
                });

                $(tbm_container).find("input:file").change(function() {
                    var files = this.files;
                    var $textInput = $(this).next("input:text");
                    $textInput.val("");
                    if (files && files.length) {
                        var $submitInput = $(this).closest("form").children("input:submit");
                        var counter = 0;
                        $textInput.val("LOADING...").attr("disabled", true);
                        readDataURLs(files, function(e) {
                            counter += 1;
                            $textInput.attr("disabled", false).val(e.target.result).change();
                            if (counter === files.length) $submitInput.attr("disabled", false);
                        });
                    }
                })
            }
        });
        $(".clear-uploads").click(function(e) {
            e.preventDefault();
            $("#"+this.dataset.id).val("").change();
        });
        $("#articles form").submit(function(e) {
            e.preventDefault();
            console.log(textbody_media);
            if (invalidURLs(textbody_media).length) { showMessage("Invalid URL", this); return false }

            var data = { headline_images, textbody_media };
            $(this).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });
            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        var artwork_file = "";
        $(":input[id*=all_platforms]").change(function() {
            $(this).closest("form").find(":input[id*=links]").val("").attr({ required: !this.checked, disabled: this.checked });
        });
        $(":input[id*=artwork_file], :input[id*=artwork_url]").change(function() {
            var id = this.id.includes("artwork_url") ? "artwork_file" : "artwork_url";
            var required = /edit|change/.test(this.id) ? false : !this.value;
            $(this).closest("form").find(":input[id*="+ id +"]").val("").attr({ required });
        });
        $("#artwork_file, #artwork_file_change").change(function() {
            var files = this.files;
            artwork_file = "";
            if (files.length) {
                var $submitInput = $(this).closest("form").children("input:submit");
                var counter = 0;
                readDataURLs(files, function(e) {
                    counter += 1;
                    artwork_file = e.target.result;
                    if (counter === files.length) $submitInput.attr("disabled", false);
                });
            }
        });
        $("#discography form").submit(function(e) {
            e.preventDefault();
            var data = {};
            $(this).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });

            var url_format = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/gim;
            if (data.links) data.links = data.links.match(url_format);
            if (artwork_file) data.artwork_file = artwork_file;

            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        var profile_image = "";
        $("#profile_image, #profile_image_change").change(function() {
            var files = this.files;
            profile_image = "";
            if (files.length) {
                var $submitInput = $(this).closest("form").children("input:submit");
                var counter = 0;
                readDataURLs(files, function(e) {
                    counter += 1;
                    profile_image = e.target.result;
                    if (counter === files.length) $submitInput.attr("disabled", false);
                });
            }
        });
        $("#artists form").submit(function(e) {
            e.preventDefault();
            var data = { socials: {} };
            $(this).serializeArray().filter(function(field) { return field.value }).forEach(function(field) {
                var name = field.name;
                var social = name.replace("social_", "");
                !name.includes("social_") ? data[name] = field.value : data.socials[social] = field.value;
            });

            if (profile_image) data.profile_image = profile_image;

            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        $.post("/search", function(docs) {
            $("#edit-remove select[id*='_id']").change(function() {
                var $form = $(this).closest("form");
                var id = this.value;
                var result = docs.filter(function(item) { return id == item._id })[0] || {};
                var socials_keys;
                try {
                    socials_keys = Object.keys(result.socials);
                } catch (e) {
                    socials_keys = [];
                }

                $form.find("#artist_name_edit").val(result.name);
                $form.find("#artist_bio_edit").val(result.bio);
                $form.find("*[id*=social_]").val("");
                socials_keys.forEach(function(k) {
                    $form.find("#social_"+ k +"_edit").val(result.socials[k]);
                });

                $form.find("#headline_edit").val(result.headline);
                var $thumb_choice = $form.find(".headline-image-thumb-choice");
                var images = result.headline_images;
                $thumb_choice.find("input").off("change").end().empty().hide();
                if (images && images.length) {
                    $thumb_choice.show().append("<label>CHOOSE ARTICLE THUMBNAIL</label>");
                    images.forEach(function(image) {
                        var name = "headline_image_thumb_change";
                        var $input = $("<input>").attr({ type: "radio", name, value: image, required: true });
                        var $img = $("<img>").attr({ src: image });
                        $thumb_choice.append($input.add($img));
                    })
                }
                $form.find("#textbody_edit").val(result.textbody).change().end().find(".textbody_media input:text").each(function(i) {
                    this.value = result.textbody_media[i];
                });

                $form.find("#artwork_url_edit").val(result.artwork);
                $form.find("#title_edit").val(result.title);
                $form.find("#artist_edit").val(result.artist);
                $form.find("#year_edit").val(result.year);
                $form.find("#links_edit").val(result.links ? result.links.join("\n") : "");
                $form.find("#all_platforms_change").attr("checked", result.all_platforms);

                $form.find("#location_name_edit").val(result.name);
                $form.find("#street_address_edit").val(result.street_address);
                $form.find("#city_edit").val(result.city);
                $form.find("#country_edit").val(result.country);
                $form.find("#postcode_edit").val(result.postcode);
            });
        });
        $("#edit-artist form").submit(function(e) {
            e.preventDefault();
            var data = { socials: {} };
            $(this).serializeArray().filter(function(field) { return field.value }).forEach(function(field) {
                var name = field.name;
                var social = name.replace("social_", "");
                !name.includes("social_") ? data[name] = field.value : data.socials[social] = field.value;
            });

            if (profile_image) data.profile_image_change = profile_image;

            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        $("#edit-article form").submit(function(e) {
            e.preventDefault();
            console.log(textbody_media);
            if (invalidURLs(textbody_media).length) { showMessage("Invalid URL", this); return false }

            var headline_images_change = headline_images;
            var textbody_media_change = textbody_media;
            var data = { headline_images_change, textbody_media_change };
            $(this).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });
            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        $("#edit-project form").submit(function(e) {
            e.preventDefault();
            var data = {};
            $(this).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });

            var url_format = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+$/gim;
            if (data.links_edit) data.links_edit = data.links_edit.match(url_format);
            if (artwork_file) data.artwork_file_change = artwork_file;

            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, true);
            });
        });

        $("#locations form, #edit-location form, #mail form").submit(function(e) {
            e.preventDefault();
            var data = {};
            var refresh = !!$(this).closest("#edit-location").length;
            $(this).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });

            $.post(this.action, data, function(result) {
                e.target.reset();
                showMessage(result, e.target, refresh);
            });
        });

        $(".tab-pane[id*=remove-] form").submit(function(e) {
            e.preventDefault();
            var form = this;
            var data = {};
            $(form).serializeArray().forEach(function(field) {
                var name = field.name;
                data[name] = field.value;
            });
            $.post(form.action, data, function(result) {
                showMessage(result, e.target);
                $(form).find(":input:checked, :input:checked + span").slideUp(function() {
                    $(this).remove();
                    Object.values(data).forEach(function(id) { $("option[value="+ id +"]").remove() });
                });
            });
        });

        $(".text-emphasis-styles > button").click(function(e) {
            e.preventDefault();
            var $textarea = $("#"+this.parentNode.dataset.id);
            var value = $textarea.val();
            var selectionStart = $textarea.prop("selectionStart");
            var selectionEnd = $textarea.prop("selectionEnd");
            var selection = value.slice(selectionStart, selectionEnd);
            var before = value.slice(0, selectionStart);
            var after = value.slice(selectionEnd, value.length);
            var em = this.firstChild.tagName.toLowerCase();
            if (selection.length) $textarea.val( before + "<"+em+">" + selection +"</"+em+">" + after );
        });

        $("#edit-remove-dropdown-options select").change(function() { $(".nav-pills a[href='"+ this.value +"']").click() });
    </script>
<%_ include partials/footer _%>
